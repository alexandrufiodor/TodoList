[{"C:\\React\\NewTodolist\\src\\state\\store.ts":"1","C:\\React\\NewTodolist\\src\\EditableSpan.tsx":"2","C:\\React\\NewTodolist\\src\\stories\\Page.stories.tsx":"3","C:\\React\\NewTodolist\\src\\stories\\Button.tsx":"4","C:\\React\\NewTodolist\\src\\stories\\decorators\\ReduxStoreProviderDecorator.tsx":"5","C:\\React\\NewTodolist\\src\\Todolist.tsx":"6","C:\\React\\NewTodolist\\src\\Task.tsx":"7","C:\\React\\NewTodolist\\src\\EditableSpan.stories.tsx":"8","C:\\React\\NewTodolist\\src\\stories\\todolists-api.stories.tsx":"9","C:\\React\\NewTodolist\\src\\stories\\Button.stories.tsx":"10","C:\\React\\NewTodolist\\src\\stories\\Page.tsx":"11","C:\\React\\NewTodolist\\src\\api\\todolists-api.ts":"12","C:\\React\\NewTodolist\\src\\Task.stories.tsx":"13","C:\\React\\NewTodolist\\src\\state\\tasks-reducer.ts":"14","C:\\React\\NewTodolist\\src\\reportWebVitals.ts":"15","C:\\React\\NewTodolist\\src\\App.stories.tsx":"16","C:\\React\\NewTodolist\\src\\state\\todolists-reducer.ts":"17","C:\\React\\NewTodolist\\src\\index.tsx":"18","C:\\React\\NewTodolist\\src\\AddItemForm.tsx":"19","C:\\React\\NewTodolist\\src\\App.tsx":"20","C:\\React\\NewTodolist\\src\\stories\\Header.stories.tsx":"21"},{"size":967,"mtime":1623096719825,"results":"22","hashOfConfig":"23"},{"size":911,"mtime":1623159756141,"results":"24","hashOfConfig":"23"},{"size":509,"mtime":1621113097000,"results":"25","hashOfConfig":"23"},{"size":941,"mtime":1621113097000,"results":"26","hashOfConfig":"23"},{"size":1139,"mtime":1621113097000,"results":"27","hashOfConfig":"23"},{"size":3712,"mtime":1623099514580,"results":"28","hashOfConfig":"23"},{"size":1729,"mtime":1623094843732,"results":"29","hashOfConfig":"23"},{"size":410,"mtime":1621113097000,"results":"30","hashOfConfig":"23"},{"size":9127,"mtime":1621511510876,"results":"31","hashOfConfig":"23"},{"size":708,"mtime":1621113097000,"results":"32","hashOfConfig":"23"},{"size":2424,"mtime":1621113097000,"results":"33","hashOfConfig":"23"},{"size":2603,"mtime":1623355161865,"results":"34","hashOfConfig":"23"},{"size":812,"mtime":1621113097000,"results":"35","hashOfConfig":"23"},{"size":7112,"mtime":1623311715889,"results":"36","hashOfConfig":"23"},{"size":425,"mtime":1607869388000,"results":"37","hashOfConfig":"23"},{"size":465,"mtime":1621113097000,"results":"38","hashOfConfig":"23"},{"size":4312,"mtime":1623164010982,"results":"39","hashOfConfig":"23"},{"size":641,"mtime":1623094767642,"results":"40","hashOfConfig":"23"},{"size":1435,"mtime":1623159717445,"results":"41","hashOfConfig":"23"},{"size":4769,"mtime":1623164031561,"results":"42","hashOfConfig":"23"},{"size":414,"mtime":1621113097000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"x32fdu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\NewTodolist\\src\\state\\store.ts",[],["98","99"],"C:\\React\\NewTodolist\\src\\EditableSpan.tsx",[],"C:\\React\\NewTodolist\\src\\stories\\Page.stories.tsx",[],["100","101"],"C:\\React\\NewTodolist\\src\\stories\\Button.tsx",[],["102","103"],"C:\\React\\NewTodolist\\src\\stories\\decorators\\ReduxStoreProviderDecorator.tsx",["104","105"],"import React from 'react'\nimport {Provider} from 'react-redux'\nimport {combineReducers, createStore} from 'redux'\nimport {v1} from 'uuid'\nimport {tasksReducer} from \"../../state/tasks-reducer\";\nimport {todolistsReducer} from \"../../state/todolists-reducer\";\nimport {AppRootState} from \"../../state/store\";\nconst rootReducer = combineReducers({\n    tasks: tasksReducer,\n    todolists: todolistsReducer\n})\n\nconst initialGlobalState = {\n    todolists: [\n        {id: \"todolistId1\", title: \"What to learn\", filter: \"all\"},\n        {id: \"todolistId2\", title: \"What to buy\", filter: \"all\"}\n    ] ,\n    tasks: {\n        [\"todolistId1\"]: [\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\n            {id: v1(), title: \"JS\", isDone: true}\n        ],\n        [\"todolistId2\"]: [\n            {id: v1(), title: \"Milk\", isDone: true},\n            {id: v1(), title: \"React Book\", isDone: true}\n        ]\n    }\n};\n\nexport const storyBookStore = createStore(rootReducer, initialGlobalState as AppRootState);\n\nexport const ReduxStoreProviderDecorator = (storyFn: any) => (\n    <Provider\n        store={storyBookStore}>{storyFn()}\n    </Provider>)\n\n",["106","107"],"C:\\React\\NewTodolist\\src\\Todolist.tsx",["108","109","110","111","112","113"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task'\r\nimport {TaskStatuses, TaskType} from './api/todolists-api'\r\nimport {FilterValuesType} from './state/todolists-reducer'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {fetchTasksTC} from \"./state/tasks-reducer\";\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasksTC(props.id))\r\n    },[])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["114","115"],"C:\\React\\NewTodolist\\src\\Task.tsx",["116","117","118"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from './api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\React\\NewTodolist\\src\\EditableSpan.stories.tsx",["119","120"],"import React from 'react'\nimport {action} from \"@storybook/addon-actions\";\nimport {EditableSpan} from \"./EditableSpan\";\n\nexport default {\n    title: 'EditableSpan Component',\n    component: EditableSpan\n}\n\nconst onChange = action('Change span')\nconst changeTaskTitle = action('Title changed')\n\nexport const EditableSpanBaseExample = (props: any) => {\n    return <EditableSpan value={''} onChange={onChange}/>\n}","C:\\React\\NewTodolist\\src\\stories\\todolists-api.stories.tsx",["121","122"],"C:\\React\\NewTodolist\\src\\stories\\Button.stories.tsx",[],["123","124"],"C:\\React\\NewTodolist\\src\\stories\\Page.tsx",[],"C:\\React\\NewTodolist\\src\\api\\todolists-api.ts",[],"C:\\React\\NewTodolist\\src\\Task.stories.tsx",["125"],"import React from 'react'\nimport {action} from \"@storybook/addon-actions\";\nimport {Task} from \"./Task\";\n\nexport default {\n    title: 'Task Component',\n    component: Task\n}\n\nconst changeTaskStatus = action('Status changed')\nconst changeTaskTitle = action('Title changed')\nconst removeTask = action('Task removed')\n\nexport const TaskBaseExample = (props: any) => {\n    return <><Task task={{id: '1', isDone: true, title: 'CSS'}}\n                   changeTaskStatus={changeTaskStatus} changeTaskTitle={changeTaskTitle}\n                   removeTask={removeTask} todolistId={'todolistId1'}/>\n        <Task task={{id: '2', isDone: false, title: 'HTML'}}\n              changeTaskStatus={changeTaskStatus} changeTaskTitle={changeTaskTitle}\n              removeTask={removeTask} todolistId={'todolistId2'}/>\n    </>\n}\n\n","C:\\React\\NewTodolist\\src\\state\\tasks-reducer.ts",[],"C:\\React\\NewTodolist\\src\\reportWebVitals.ts",[],"C:\\React\\NewTodolist\\src\\App.stories.tsx",["126"],"C:\\React\\NewTodolist\\src\\state\\todolists-reducer.ts",[],"C:\\React\\NewTodolist\\src\\index.tsx",[],"C:\\React\\NewTodolist\\src\\AddItemForm.tsx",["127","128","129"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","C:\\React\\NewTodolist\\src\\App.tsx",["130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"C:\\React\\NewTodolist\\src\\stories\\Header.stories.tsx",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"144","replacedBy":"148"},{"ruleId":"146","replacedBy":"149"},{"ruleId":"144","replacedBy":"150"},{"ruleId":"146","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":19,"column":9,"nodeType":"154","messageId":"155","endLine":22,"endColumn":10,"fix":"156"},{"ruleId":"152","severity":1,"message":"157","line":23,"column":9,"nodeType":"154","messageId":"155","endLine":26,"endColumn":10,"fix":"158"},{"ruleId":"144","replacedBy":"159"},{"ruleId":"146","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":32,"column":7,"nodeType":"163","endLine":32,"endColumn":9,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":36,"column":8,"nodeType":"163","endLine":36,"endColumn":33,"suggestions":"166"},{"ruleId":"161","severity":1,"message":"165","line":43,"column":8,"nodeType":"163","endLine":43,"endColumn":45,"suggestions":"167"},{"ruleId":"161","severity":1,"message":"165","line":45,"column":86,"nodeType":"163","endLine":45,"endColumn":116,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"165","line":46,"column":92,"nodeType":"163","endLine":46,"endColumn":122,"suggestions":"169"},{"ruleId":"161","severity":1,"message":"165","line":47,"column":98,"nodeType":"163","endLine":47,"endColumn":128,"suggestions":"170"},{"ruleId":"144","replacedBy":"171"},{"ruleId":"146","replacedBy":"172"},{"ruleId":"161","severity":1,"message":"165","line":15,"column":97,"nodeType":"163","endLine":15,"endColumn":130,"suggestions":"173"},{"ruleId":"161","severity":1,"message":"165","line":20,"column":8,"nodeType":"163","endLine":20,"endColumn":41,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"165","line":24,"column":8,"nodeType":"163","endLine":24,"endColumn":41,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":5,"column":1,"nodeType":"178","endLine":8,"endColumn":2},{"ruleId":"179","severity":1,"message":"180","line":11,"column":7,"nodeType":"181","messageId":"182","endLine":11,"endColumn":22},{"ruleId":"179","severity":1,"message":"183","line":2,"column":23,"nodeType":"181","messageId":"182","endLine":2,"endColumn":35},{"ruleId":"176","severity":1,"message":"177","line":4,"column":1,"nodeType":"178","endLine":6,"endColumn":2},{"ruleId":"144","replacedBy":"184"},{"ruleId":"146","replacedBy":"185"},{"ruleId":"176","severity":1,"message":"177","line":5,"column":1,"nodeType":"178","endLine":8,"endColumn":2},{"ruleId":"179","severity":1,"message":"186","line":4,"column":15,"nodeType":"181","messageId":"182","endLine":4,"endColumn":20},{"ruleId":"179","severity":1,"message":"187","line":2,"column":9,"nodeType":"181","messageId":"182","endLine":2,"endColumn":12},{"ruleId":"179","severity":1,"message":"188","line":2,"column":14,"nodeType":"181","messageId":"182","endLine":2,"endColumn":20},{"ruleId":"179","severity":1,"message":"189","line":2,"column":22,"nodeType":"181","messageId":"182","endLine":2,"endColumn":33},{"ruleId":"179","severity":1,"message":"190","line":8,"column":5,"nodeType":"181","messageId":"182","endLine":8,"endColumn":18},{"ruleId":"179","severity":1,"message":"191","line":10,"column":5,"nodeType":"181","messageId":"182","endLine":10,"endColumn":26},{"ruleId":"179","severity":1,"message":"192","line":12,"column":5,"nodeType":"181","messageId":"182","endLine":12,"endColumn":21},{"ruleId":"179","severity":1,"message":"193","line":17,"column":5,"nodeType":"181","messageId":"182","endLine":17,"endColumn":23},{"ruleId":"179","severity":1,"message":"194","line":18,"column":5,"nodeType":"181","messageId":"182","endLine":18,"endColumn":22},{"ruleId":"179","severity":1,"message":"195","line":23,"column":33,"nodeType":"181","messageId":"182","endLine":23,"endColumn":45},{"ruleId":"161","severity":1,"message":"196","line":39,"column":8,"nodeType":"163","endLine":39,"endColumn":10,"suggestions":"197"},{"ruleId":"161","severity":1,"message":"198","line":44,"column":8,"nodeType":"163","endLine":44,"endColumn":10,"suggestions":"199"},{"ruleId":"161","severity":1,"message":"198","line":49,"column":8,"nodeType":"163","endLine":49,"endColumn":10,"suggestions":"200"},{"ruleId":"161","severity":1,"message":"198","line":54,"column":8,"nodeType":"163","endLine":54,"endColumn":10,"suggestions":"201"},{"ruleId":"161","severity":1,"message":"198","line":59,"column":8,"nodeType":"163","endLine":59,"endColumn":10,"suggestions":"202"},{"ruleId":"161","severity":1,"message":"198","line":64,"column":8,"nodeType":"163","endLine":64,"endColumn":10,"suggestions":"203"},{"ruleId":"161","severity":1,"message":"198","line":69,"column":8,"nodeType":"163","endLine":69,"endColumn":10,"suggestions":"204"},{"ruleId":"161","severity":1,"message":"198","line":74,"column":8,"nodeType":"163","endLine":74,"endColumn":10,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],["206"],["207"],"no-useless-computed-key","Unnecessarily computed property [\"todolistId1\"] found.","Property","unnecessarilyComputedProperty",{"range":"208","text":"209"},"Unnecessarily computed property [\"todolistId2\"] found.",{"range":"210","text":"211"},["206"],["207"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.","ArrayExpression",["212"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["213"],["214"],["215"],["216"],["217"],["206"],["207"],["218"],["219"],["220"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'changeTaskTitle' is assigned a value but never used.","Identifier","unusedVar","'TodolistType' is defined but never used.",["206"],["207"],"'Story' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'addTodolistAC' is defined but never used.","'changeTodolistTitleAC' is defined but never used.","'removeTodolistAC' is defined but never used.","'changeTaskStatusAC' is defined but never used.","'changeTaskTitleAC' is defined but never used.","'todolistsAPI' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["221"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["222"],["223"],["224"],["225"],["226"],["227"],["228"],"no-global-assign","no-unsafe-negation",[613,628],"\"todolistId1\"",[758,773],"\"todolistId2\"",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"231","fix":"233"},{"desc":"231","fix":"234"},{"desc":"231","fix":"235"},{"desc":"231","fix":"236"},{"desc":"231","fix":"237"},{"desc":"231","fix":"238"},{"desc":"231","fix":"239"},{"desc":"240","fix":"241"},{"desc":"240","fix":"242"},{"desc":"240","fix":"243"},{"desc":"240","fix":"244"},{"desc":"240","fix":"245"},{"desc":"240","fix":"246"},{"desc":"240","fix":"247"},{"desc":"240","fix":"248"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"249","text":"250"},"Update the dependencies array to be: [props]",{"range":"251","text":"252"},{"range":"253","text":"252"},{"range":"254","text":"252"},{"range":"255","text":"252"},{"range":"256","text":"252"},{"range":"257","text":"252"},{"range":"258","text":"252"},{"range":"259","text":"252"},"Update the dependencies array to be: [dispatch]",{"range":"260","text":"261"},{"range":"262","text":"261"},{"range":"263","text":"261"},{"range":"264","text":"261"},{"range":"265","text":"261"},{"range":"266","text":"261"},{"range":"267","text":"261"},{"range":"268","text":"261"},[1251,1253],"[dispatch, props.id]",[1359,1384],"[props]",[1597,1634],[1724,1754],[1848,1878],[1978,2008],[721,754],[1027,1060],[1217,1250],[1319,1321],"[dispatch]",[1487,1489],[1656,1658],[1864,1866],[2071,2073],[2269,2271],[2413,2415],[2589,2591]]